// TSのプロジェクとではライブラリがTSに対応しているかどうかを検討する必要がある
// 型情報がないライブラリだと型チェックを通過できずエラーになるから
// ライブラリはTSで書かれていても、JSにコンパイルされて型情報が失われて提供されているのが一般的
// そのため拡張子が「.d.ts」という宣言ファイル(declaration)を作成することで、実装とは切り離して型情報を別ファイルで保存・管理できるようになる

// npmでインストール可能なライブラリは以下の3つに分類できる
// ・JSファイルとそれに伴う宣言ファイルが同梱
// ・JSファイルのみ。宣言ファイルは別途インストールが必要
// ・JSファイルのみ。宣言ファイルが存在しない

// ・JSファイルとそれに伴う宣言ファイルが同梱
// =>インストール後、すぐに利用可能

// ・JSファイルのみ。宣言ファイルは別途インストールが必要
// =>宣言ファイルをインストールする必要がある
// =>DefinitelyTypedという「GitHub」の巨大リポジトリにJSライブラリの宣言ファイルを集めて提供しているので、ここからインストールする

// ・JSファイルのみ。宣言ファイルが存在しない
// =>そのままでは絶対に使えないので、以下の対処が必要
// =>・DefinitelyTypedにサポートのリクエストを送る
// =>・自分で宣言ファイルを作成する
// =>しかし、1つ目は対応してくれるかどうかわからないし、2つ目は膨大な時間を要する可能性もあるので、他のライブラリで代替えできないか検討したほうがいい
